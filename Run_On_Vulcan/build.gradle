/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'eclipse'
//my computer is running java 1.8 but the Vulcan server is running 1.8 so I needed to downgrade the
//build to 1.7 for the runnable jar to run on vulcan
sourceCompatibility = 1.7
targetCompatibility = 1.7

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}

dependencies {
    
    // https://mvnrepository.com/artifact/commons-net/commons-net
	compile group: 'commons-net', name: 'commons-net', version: '3.6'
    // https://mvnrepository.com/artifact/com.opencsv/opencsv
	compile group: 'com.opencsv', name: 'opencsv', version: '4.2'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.46'
	
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:25.1-android'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
	mainClassName = 'Main'
	